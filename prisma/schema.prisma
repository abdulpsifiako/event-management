// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(uuid()) 
  name String 
  email String @unique
  phone String? 
  username String @unique
  gender String?
  profession String?
  nationality String? 
  dateofbirth DateTime?
  password String? 
  image String?
  verivied Boolean @default(false)
  isDeleted Boolean @default(false)
  role String?
  historyLogin HistoryLogin[]
}

model HistoryLogin{
  id Int @id @default(autoincrement())
  users Users @relation(fields: [userId],references: [id])
  userId String 
  token String @db.Text
  isLogin Boolean @default(true)
  dateLogin DateTime @default(now())
  dateLogout DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())
  name String
  category String
  description String @db.Text
  isActive Boolean @default(true)
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  showTimes ShowTimes[]
  locations Locations[]
  photos Photos[]
}

model ShowTimes{
  id Int @id @default(autoincrement())
  time DateTime @db.Time()
  product Product @relation(fields: [productId], references: [id])
  productId Int
  photos Photos[]
}

model Locations{
  id Int @id @default(autoincrement())
  name String 
  description String
  product Product @relation(fields: [productId], references: [id])
  productId Int
  photos Photos[]
}

model Photos {
  id Int @id @default(autoincrement())
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product Product[]
  showTimes ShowTimes[]
  locations Locations[]
}
